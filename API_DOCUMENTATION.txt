996 MARKETPLACE SCANNER APP - API DOCUMENTATION
==============================================

BASE URL: https://api.996.kg/v1
CONTENT-TYPE: application/json
AUTHORIZATION: Bearer {token}

==============================================
1. AUTHENTICATION FLOW
==============================================

1.1 SEND OTP (Phone Number Registration)
----------------------------------------
POST /auth/send-otp
Body: {
  "phoneNumber": "+996700123456",
  "countryCode": "+996"
}
Response: {
  "success": true,
  "message": "OTP sent successfully",
  "sessionId": "session_12345"
}

1.2 VERIFY OTP
--------------
POST /auth/verify-otp
Body: {
  "phoneNumber": "+996700123456",
  "otp": "123456",
  "sessionId": "session_12345"
}
Response: {
  "success": true,
  "token": "jwt_token_here",
  "user": {
    "id": "user_123",
    "phoneNumber": "+996700123456",
    "isVerified": true,
    "profile": {
      "name": null,
      "email": null
    }
  }
}

1.3 REFRESH TOKEN
-----------------
POST /auth/refresh
Headers: Authorization: Bearer {refresh_token}
Response: {
  "success": true,
  "token": "new_jwt_token",
  "refreshToken": "new_refresh_token"
}

1.4 LOGOUT
----------
POST /auth/logout
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "message": "Logged out successfully"
}

==============================================
2. HOME SCREEN APIs
==============================================

2.1 GET PVZ LIST (Pickup Points)
---------------------------------
GET /pvz/list
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "data": [
    {
      "id": "34",
      "name": "34",
      "description": "Computer Technology",
      "address": "Bishkek, Chui Avenue 123",
      "isActive": true,
      "workingHours": {
        "monday": "09:00-18:00",
        "tuesday": "09:00-18:00",
        "lunch": "13:00-14:00"
      }
    }
  ]
}

2.2 GET FINANCIAL SUMMARY
--------------------------
GET /dashboard/financial-summary
Headers: Authorization: Bearer {token}
Query: ?pvzId=34&period=month
Response: {
  "success": true,
  "data": {
    "ordersThisMonth": 156,
    "revenueThisMonth": 35000,
    "currency": "KGS",
    "rating": 32,
    "pvzInfo": {
      "id": "34",
      "name": "34",
      "status": "open",
      "closingTime": "18:00"
    }
  }
}

2.3 GET WORK SCHEDULE
---------------------
GET /pvz/{pvzId}/schedule
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "data": {
    "schedule": [
      {
        "day": "monday",
        "hours": "09:00-18:00",
        "lunch": "13:00-14:00",
        "isWorkingDay": true
      }
    ],
    "currentStatus": {
      "isOpen": true,
      "closingTime": "18:00"
    }
  }
}

2.4 UPDATE WORK SCHEDULE
------------------------
PUT /pvz/{pvzId}/schedule
Headers: Authorization: Bearer {token}
Body: {
  "schedule": [
    {
      "day": "monday",
      "hours": "09:00-18:00",
      "lunch": "13:00-14:00",
      "isWorkingDay": true
    }
  ]
}
Response: {
  "success": true,
  "message": "Schedule updated successfully"
}

==============================================
3. WALLET SCREEN APIs
==============================================

3.1 GET WALLET BALANCE
-----------------------
GET /wallet/balance
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "data": {
    "availableBalance": 3500,
    "securityDeposit": 1340,
    "availableToWithdraw": 2500,
    "minimumTopUp": 500,
    "currency": "KGS"
  }
}

3.2 GET TRANSACTION HISTORY
----------------------------
GET /wallet/transactions
Headers: Authorization: Bearer {token}
Query: ?page=1&limit=20&type=all&status=all&dateFrom=2024-01-01&dateTo=2024-12-31
Response: {
  "success": true,
  "data": {
    "transactions": [
      {
        "id": "txn_123",
        "type": "income",
        "amount": 1500,
        "description": "Top Up",
        "date": "2024-02-12T12:34:00Z",
        "status": "completed",
        "transactionNumber": "2728328929"
      }
    ],
    "pagination": {
      "page": 1,
      "limit": 20,
      "total": 50,
      "totalPages": 3
    }
  }
}

3.3 TOP UP BALANCE
------------------
POST /wallet/topup
Headers: Authorization: Bearer {token}
Body: {
  "amount": 5000,
  "paymentMethod": "card"
}
Response: {
  "success": true,
  "data": {
    "transactionId": "txn_456",
    "amount": 5000,
    "status": "pending",
    "paymentUrl": "https://payment.provider.com/pay/123"
  }
}

3.4 WITHDRAW MONEY
------------------
POST /wallet/withdraw
Headers: Authorization: Bearer {token}
Body: {
  "amount": 2500,
  "bankAccount": "1234567890",
  "bankName": "Optima Bank"
}
Response: {
  "success": true,
  "data": {
    "transactionId": "txn_789",
    "amount": 2500,
    "status": "processing",
    "estimatedTime": "1-3 business days"
  }
}

3.5 SECURITY DEPOSIT INFO
--------------------------
GET /wallet/security-deposit
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "data": {
    "currentAmount": 1340,
    "requiredAmount": 1500,
    "isAutomatic": true,
    "lastUpdated": "2024-02-12T12:34:00Z"
  }
}

==============================================
4. ORDERS SCREEN APIs
==============================================

4.1 GET ORDERS LIST
-------------------
GET /orders
Headers: Authorization: Bearer {token}
Query: ?page=1&limit=20&status=all&pvzId=34
Response: {
  "success": true,
  "data": {
    "orders": [
      {
        "id": "order_123",
        "number": "ORD-123456",
        "product": "iPhone 15 Pro",
        "customer": {
          "name": "John Doe",
          "phone": "+996700123456"
        },
        "date": "2024-02-12T12:34:00Z",
        "status": "new",
        "amount": 85000,
        "pvzId": "34"
      }
    ],
    "pagination": {
      "page": 1,
      "limit": 20,
      "total": 100,
      "totalPages": 5
    }
  }
}

4.2 UPDATE ORDER STATUS
-----------------------
PUT /orders/{orderId}/status
Headers: Authorization: Bearer {token}
Body: {
  "status": "accepted",
  "notes": "Order accepted and ready for pickup"
}
Response: {
  "success": true,
  "message": "Order status updated successfully"
}

4.3 GET ORDER DETAILS
----------------------
GET /orders/{orderId}
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "data": {
    "id": "order_123",
    "number": "ORD-123456",
    "product": "iPhone 15 Pro",
    "customer": {
      "name": "John Doe",
      "phone": "+996700123456",
      "email": "john@example.com"
    },
    "date": "2024-02-12T12:34:00Z",
    "status": "new",
    "amount": 85000,
    "pvzId": "34",
    "qrCode": "QR_CODE_DATA_HERE",
    "barcode": "BARCODE_DATA_HERE"
  }
}

==============================================
5. SCANNER SCREEN APIs
==============================================

5.1 SCAN QR/BARCODE (Process Scanned Code)
-------------------------------------------
POST /scanner/process
Headers: Authorization: Bearer {token}
Body: {
  "code": "QR_OR_BARCODE_DATA",
  "type": "qr", // or "barcode"
  "action": "pickup", // or "return"
  "pvzId": "34"
}
Response: {
  "success": true,
  "data": {
    "orderId": "order_123",
    "orderNumber": "ORD-123456",
    "product": "iPhone 15 Pro",
    "customer": {
      "name": "John Doe",
      "phone": "+996700123456"
    },
    "action": "pickup",
    "status": "processed"
  }
}

5.2 MANUAL ORDER INPUT
----------------------
POST /scanner/manual
Headers: Authorization: Bearer {token}
Body: {
  "orderNumber": "123456789",
  "action": "pickup", // or "return"
  "pvzId": "34"
}
Response: {
  "success": true,
  "data": {
    "orderId": "order_123",
    "orderNumber": "ORD-123456",
    "product": "iPhone 15 Pro",
    "customer": {
      "name": "John Doe",
      "phone": "+996700123456"
    },
    "status": "found"
  }
}

==============================================
6. PROFILE SCREEN APIs
==============================================

6.1 GET USER PROFILE
---------------------
GET /profile
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "data": {
    "id": "user_123",
    "phoneNumber": "+996700123456",
    "profile": {
      "name": "John Doe",
      "email": "john@example.com",
      "avatar": "https://cdn.996.kg/avatars/user_123.jpg"
    },
    "settings": {
      "language": "ru",
      "notifications": true,
      "theme": "light"
    }
  }
}

6.2 UPDATE USER PROFILE
------------------------
PUT /profile
Headers: Authorization: Bearer {token}
Body: {
  "name": "John Doe",
  "email": "john@example.com"
}
Response: {
  "success": true,
  "message": "Profile updated successfully"
}

6.3 UPDATE USER SETTINGS
-------------------------
PUT /profile/settings
Headers: Authorization: Bearer {token}
Body: {
  "language": "en",
  "notifications": false,
  "theme": "dark"
}
Response: {
  "success": true,
  "message": "Settings updated successfully"
}

==============================================
7. NOTIFICATIONS APIs
==============================================

7.1 GET NOTIFICATIONS
----------------------
GET /notifications
Headers: Authorization: Bearer {token}
Query: ?page=1&limit=20&unreadOnly=false
Response: {
  "success": true,
  "data": {
    "notifications": [
      {
        "id": "notif_123",
        "title": "New Order",
        "message": "You have a new order #ORD-123456",
        "type": "order",
        "isRead": false,
        "createdAt": "2024-02-12T12:34:00Z"
      }
    ],
    "unreadCount": 5
  }
}

7.2 MARK NOTIFICATION AS READ
-----------------------------
PUT /notifications/{notificationId}/read
Headers: Authorization: Bearer {token}
Response: {
  "success": true,
  "message": "Notification marked as read"
}

==============================================
8. ERROR RESPONSES
==============================================

All endpoints may return these error responses:

400 Bad Request:
{
  "success": false,
  "error": "VALIDATION_ERROR",
  "message": "Invalid request data",
  "details": {
    "phoneNumber": "Phone number is required"
  }
}

401 Unauthorized:
{
  "success": false,
  "error": "UNAUTHORIZED",
  "message": "Invalid or expired token"
}

403 Forbidden:
{
  "success": false,
  "error": "FORBIDDEN",
  "message": "Access denied"
}

404 Not Found:
{
  "success": false,
  "error": "NOT_FOUND",
  "message": "Resource not found"
}

500 Internal Server Error:
{
  "success": false,
  "error": "INTERNAL_ERROR",
  "message": "Something went wrong"
}

==============================================
9. WEBSOCKET EVENTS (Real-time Updates)
==============================================

Connection: wss://api.996.kg/ws
Authorization: ?token={jwt_token}

Events to Listen:
- "new_order": New order received
- "order_status_changed": Order status updated
- "balance_updated": Wallet balance changed
- "notification": New notification received

Events to Send:
- "join_pvz": Join PVZ room for real-time updates
- "heartbeat": Keep connection alive

==============================================
10. RATE LIMITS
==============================================

- Authentication endpoints: 5 requests per minute
- General API endpoints: 100 requests per minute
- File upload endpoints: 10 requests per minute

==============================================
11. SUPPORTED LANGUAGES
==============================================

API supports these languages via Accept-Language header:
- ru (Russian) - Default
- en (English)
- ky (Kyrgyz)

Example: Accept-Language: en

==============================================
END OF DOCUMENTATION
==============================================
